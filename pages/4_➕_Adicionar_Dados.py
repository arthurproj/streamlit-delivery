import streamlit as st
import os
import sys

# Adicionar o diret√≥rio pai ao path para importar os m√≥dulos corretamente
sys.path.append(os.path.dirname(os.path.dirname(__file__)))
from utils.helpers import get_data, apply_custom_css
from utils.sidebar import show_sidebar  # Importe a fun√ß√£o da sidebar

# Verifique se o estado da sess√£o existe
if "user_id" not in st.session_state:
    st.session_state.user_id = None
    st.session_state.user_name = None

# Guardar nome da p√°gina atual (opcional para keys √∫nicas)
st.session_state["_current_page"] = "adicionar_dados"

# Adicionar CSS para controlar a ordem da sidebar - DEVE ser o primeiro c√≥digo
st.markdown("""
<style>
/* For√ßar ordem da sidebar */
section[data-testid="stSidebar"] > div:first-child {
    display: flex !important;
    flex-direction: column !important;
}

section[data-testid="stSidebar"] > div:first-child > div:first-child {
    order: -1 !important;
}
</style>
""", unsafe_allow_html=True)

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Adicionar Dados - Fake Delivery", page_icon="‚ûï", layout="wide")
apply_custom_css()

# Mostrar a sidebar compartilhada
with st.sidebar:
    show_sidebar()

# T√≠tulo da p√°gina
st.markdown('<p class="main-header">üçï Fake Delivery Dashboard</p>', unsafe_allow_html=True)
st.markdown('<p class="subheader">‚ûï Adicionar Novos Dados</p>', unsafe_allow_html=True)

add_option = st.selectbox("O que voc√™ deseja adicionar?", ["Usu√°rio", "Restaurante", "Comida"])

if add_option == "Usu√°rio":
    with st.form("add_user_form"):
        st.subheader("Adicionar Novo Usu√°rio")
        name = st.text_input("Nome")
        email = st.text_input("Email")
        address = st.text_input("Endere√ßo (opcional)")
        
        submitted = st.form_submit_button("Adicionar Usu√°rio")
        if submitted:
            # Aqui voc√™ faria um POST request para a API
            # Como √© uma API fake, vamos apenas simular o sucesso
            st.success(f"Usu√°rio {name} adicionado com sucesso!")
            st.info("Nota: Esta √© uma API somente leitura, ent√£o o usu√°rio n√£o foi realmente adicionado.")

elif add_option == "Restaurante":
    with st.form("add_restaurant_form"):
        st.subheader("Adicionar Novo Restaurante")
        name = st.text_input("Nome")
        location = st.text_input("Localiza√ß√£o")
        rating = st.slider("Avalia√ß√£o", 1.0, 5.0, 4.0, 0.5)
        
        submitted = st.form_submit_button("Adicionar Restaurante")
        if submitted:
            st.success(f"Restaurante {name} adicionado com sucesso!")
            st.info("Nota: Esta √© uma API somente leitura, ent√£o o restaurante n√£o foi realmente adicionado.")

elif add_option == "Comida":
    with st.form("add_food_form"):
        st.subheader("Adicionar Nova Comida")
        name = st.text_input("Nome")
        price = st.number_input("Pre√ßo (R$)", min_value=0.0, value=10.0, step=0.5)
        description = st.text_area("Descri√ß√£o")
        
        submitted = st.form_submit_button("Adicionar Comida")
        if submitted:
            st.success(f"Comida {name} adicionada com sucesso!")
            st.info("Nota: Esta √© uma API somente leitura, ent√£o a comida n√£o foi realmente adicionada.")